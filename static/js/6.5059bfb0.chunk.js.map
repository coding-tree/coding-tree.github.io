{"version":3,"sources":["components/Birds lazy /^/.//.*_initial/.json$/ groupOptions: {} namespace object","components/Birds lazy /^/.//.*_hover_on/.json$/ groupOptions: {} namespace object","components/Birds lazy /^/.//.*_hover_off/.json$/ groupOptions: {} namespace object","components/Birds/Bird.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","Bird","birdType","className","setVisibility","largeDevice","animations","useState","animation","setAnimation","initial","setInitial","hoverOn","setHoverOn","hoverOff","setHoverOff","loadData","useCallback","a","all","initialData","hoverOnData","hoverOffData","useEffect","options","loop","autoplay","animationData","default","onClick","onMouseOver","onMouseLeave","isClickToPauseDisabled","speed","eventListeners","eventName","callback","runtime","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","reject","invoke","result","__await","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply"],"mappings":"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","file":"static/js/6.5059bfb0.chunk.js","sourcesContent":["var map = {\n\t\"./baby_initial.json\": [\n\t\t218,\n\t\t17\n\t],\n\t\"./bird_initial.json\": [\n\t\t219,\n\t\t20\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 212;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./baby_hover_on.json\": [\n\t\t220,\n\t\t16\n\t],\n\t\"./bird_hover_on.json\": [\n\t\t221,\n\t\t19\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 213;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./baby_hover_off.json\": [\n\t\t222,\n\t\t15\n\t],\n\t\"./bird_hover_off.json\": [\n\t\t223,\n\t\t18\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 214;\nmodule.exports = webpackAsyncContext;","import React, {useState, useEffect, useCallback} from 'react';\nimport Lottie from 'react-lottie';\nimport {string, func, bool} from 'prop-types';\n\nfunction Bird({birdType = 'bird', className, setVisibility, largeDevice}) {\n  const animations = {\n    INITIAL: 'initial',\n    HOVERON: 'hoverOn',\n    HOVEROFF: 'hoverOff',\n  };\n  const [animation, setAnimation] = useState(animations.INITIAL);\n\n  const [initial, setInitial] = useState(null);\n  const [hoverOn, setHoverOn] = useState(null);\n  const [hoverOff, setHoverOff] = useState(null);\n\n  const loadData = useCallback(async () => {\n    const [initialData, hoverOnData, hoverOffData] = await Promise.all([\n      import(`./${birdType}_initial.json`),\n      import(`./${birdType}_hover_on.json`),\n      import(`./${birdType}_hover_off.json`),\n    ]);\n\n    setInitial(initialData);\n    setHoverOn(hoverOnData);\n    setHoverOff(hoverOffData);\n  }, [birdType]);\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  const data = {\n    initial: initial || {},\n    hoverOn: hoverOn || {},\n    hoverOff: hoverOff || {},\n  };\n\n  const options = {\n    loop: animation === animations.INITIAL,\n    autoplay: true,\n    animationData: data[animation].default,\n  };\n\n  return (\n    <div\n      onClick={() => {\n        if (!largeDevice) {\n          setVisibility(true);\n        }\n      }}\n      onMouseOver={() => {\n        if (largeDevice) {\n          setVisibility(true);\n          setAnimation(animations.HOVERON);\n        }\n      }}\n      onMouseLeave={() => {\n        if (largeDevice) {\n          setVisibility(false);\n          setAnimation(animations.HOVEROFF);\n        }\n      }}\n      className={'bird ' + className}>\n      <Lottie\n        isClickToPauseDisabled={true}\n        speed={1}\n        eventListeners={[\n          {\n            eventName: 'complete',\n            callback: () => animation === animations.HOVEROFF && setAnimation(animations.INITIAL),\n          },\n        ]}\n        options={options}></Lottie>\n    </div>\n  );\n}\n\nBird.propTypes = {\n  birdType: string,\n  className: string.isRequired,\n  largeDevice: bool.isRequired,\n  setVisibility: func.isRequired,\n};\n\nexport default Bird;\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}