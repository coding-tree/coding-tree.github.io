{"version":3,"sources":["components/Box/BoxPath.js","components/Box/BoxFolders.js","components/SubFolder.js","components/Folders.js","components/Box/BoxInfo.js","components/Box/BoxInfoStartup.js","components/Profile/ProfileDetail.js","components/FolderDetail.js","components/Avatar.js","components/Profile/ProfileSocial.js","components/Profile/ProfileStack.js","components/Profile/ProfileDescription.js","components/Profile/ProfileName.js","components/Profile/ProfileAge.js","components/Profile/Profile.js","components/updateFolderStructure.js","components/AboutUs.js"],"names":["BoxPath","title","selectedElement","folders","children","className","path","BoxFolders","SubFolder","el","setFolderIcon","folderStructure","selectedItem","setSelection","setSelectedElement","useState","isExpanded","setExpand","id","name","kind","avatar","styles","height","length","top","key","style","onClick","e","elem","currentTarget","lastElementChild","classList","remove","handleFolderClick","src","alt","undefined","map","Folders","isVisible","useEffect","add","BoxInfo","BoxInfoStartup","ProfileDetail","isTablet","useMedia","target","closeModal","FolderDetail","Avatar","profile","ProfileSocial","social","icon","href","rel","ProfileStack","stack","slice","lastItem","ProfileDescription","emptyDescription","description","ProfileName","ProfileAge","dateOfBirth","date","Date","getFullYear","calculateAge","Profile","github","fb","stackOverflow","twitter","linkedIn","portfolio","spotify","updateFolderStructure","parentPath","currentPath","updatedChildren","withTimeOfDay","withTheme","motive","changeMotive","theme","dateTime","changeTimeOfDay","updateFolders","Box","BoxImage","light","dark","BoxWrapper","MotiveSlider","BoxContent"],"mappings":"47YAyBeA,EAtBC,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SACjD,OACE,yBAAKC,UAAU,YACb,6BACE,4BAAKJ,IAEP,yBAAKI,UAAU,uBACb,uBAAGA,UAAU,kBACb,4BAAMH,GAAmBA,EAAgBI,MAAUH,GAAWA,EAAQG,OAEvEF,I,iBCFQG,EARI,SAAC,GAAgB,IAAfH,EAAc,EAAdA,SACnB,OAAO,yBAAKC,UAAU,eAAeD,IC2DxBI,EA5DG,SAAZA,EAAa,GAA0F,IAAzFC,EAAwF,EAAxFA,GAAIC,EAAoF,EAApFA,cAAeC,EAAqE,EAArEA,gBAAiBC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,mBAAwB,EAC1EC,oBAAS,GADiE,mBACnGC,EADmG,KACvFC,EADuF,KAEnGC,EAAoCT,EAApCS,GAAIC,EAAgCV,EAAhCU,KAAMC,EAA0BX,EAA1BW,KAAMhB,EAAoBK,EAApBL,SAAUiB,EAAUZ,EAAVY,OAE3BC,EAAS,CACbC,OAAQZ,EAAgBa,SAAWN,GAAe,WAATE,GAAqB,OAC9DK,IAAc,WAATL,GAAqB,SAY5B,OACE,yBAAKM,IAAKR,EAAIb,UAAU,WACpBM,EAAgBa,SAAWN,GAAe,WAATE,IAAsB,wBAAIf,UAAU,aAAasB,MAAOL,IAE3F,yBAAKM,QAAS,SAAAC,GAAC,OAbO,SAAAA,GACxB,IAAMC,EAAOD,EAAEE,cACfjB,EAAmBL,GAEfG,GAAgBA,IAAiBkB,GAAMlB,EAAaoB,iBAAiBC,UAAUC,OAAO,mBAC1FrB,EAAaiB,GACbb,GAAWD,GAOUmB,CAAkBN,IAAIxB,UAAU,eAEjD,wBAAIA,UAAU,gBAEJ,WAATe,GACC,yBAAKQ,QAAS,kBAAMX,GAAWD,IAAaX,UAAU,UACnDK,EAAcM,IAGT,WAATI,EAAoB,uBAAGf,UAAU,kBAAuB,yBAAK+B,IAAG,kBAAaf,GAAUF,EAAvB,QAAmCkB,IAAI,KACxG,+BAAKlB,EAAL,WAGYmB,IAAblC,GACCA,EAASoB,OAAS,GAClBR,GACAZ,EAASmC,KAAI,SAAA9B,GAAE,OACb,kBAACD,EAAD,CACEkB,IAAKjB,EAAGS,GACRP,gBAAiBP,EACjBQ,aAAcA,EACdC,aAAcA,EACdH,cAAeA,EACfI,mBAAoBA,EACpBL,GAAIA,SCXD+B,EAlCC,SAAC,GAA4D,IAA3D1B,EAA0D,EAA1DA,mBAAoBZ,EAAsC,EAAtCA,gBAAiBS,EAAqB,EAArBA,gBAAqB,EACrCI,mBAAS,MAD4B,mBACnEH,EADmE,KACrDC,EADqD,KAEpEH,EAAgB,SAAA+B,GACpB,OAAOA,EAAY,IAAM,KAM3B,OAJAC,qBAAU,WACRxC,GAAmBU,GAAgBA,EAAaoB,iBAAiBC,UAAUU,IAAI,oBAC9EzC,GAAmBU,GAAgBA,EAAaoB,iBAAiBC,UAAUC,OAAO,qBAClF,CAACtB,EAAcV,IACdS,EAEA,yBAAKN,UAAU,WACZM,EAAgBP,SAASmC,KAAI,SAAA9B,GAAE,OAC9B,kBAAC,EAAD,CACEiB,IAAKjB,EAAGS,GACRP,gBAAiBA,EAAgBP,SACjCQ,aAAcA,EACdC,aAAcA,EACdH,cAAeA,EACfI,mBAAoBA,EACpBL,GAAIA,QAKP,MClBMmC,EARC,SAAC,GAAgB,IAAfxC,EAAc,EAAdA,SAChB,OAAO,yBAAKC,UAAU,YAAYD,ICarByC,EAdQ,SAAC,GAAuB,IAAtB5C,EAAqB,EAArBA,MAAOG,EAAc,EAAdA,SAC9B,OACE,yBAAKC,UAAU,oBACb,4BAAKJ,GACL,2BAAIG,K,QC2BK0C,EA9BO,SAAC,GAAqD,IAApD1C,EAAmD,EAAnDA,SAAUF,EAAyC,EAAzCA,gBAAiBY,EAAwB,EAAxBA,mBAC3CiC,EAAWC,YAAS,sBAM1B,MAA6B,WAAzB9C,EAAgBkB,KACd2B,EAEA,yBAAKnB,QAAS,SAACC,GAAD,OAPD,SAACA,GAClBA,EAAEoB,SAAWpB,EAAEE,eAAiBjB,EAAmB,MAM1BoC,CAAWrB,IAAIxB,UAAU,eAC5C,yBAAKA,UAAU,iBACb,4BAAQA,UAAU,QAAQuB,QAAS,kBAAMd,EAAmB,QAC1D,uBAAGT,UAAU,kBAEdD,IAKF,yBAAKC,UAAU,eAAeD,GAEhC,MCNM+C,EAjBM,SAAC,GAAuB,IAAtBjD,EAAqB,EAArBA,gBACdiB,EAAuBjB,EAAvBiB,KADmC,EACZjB,EAAjBE,gBAD6B,MAClB,GADkB,EAE1C,MAA6B,WAAzBF,EAAgBkB,KAEhB,yBAAKf,UAAU,iBACb,4BAAKc,GACL,oEAA6Bf,EAASoB,SAIrC,MCGM4B,EAbA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACRlC,EAAgBkC,EAAhBlC,KAAME,EAAUgC,EAAVhC,OACb,OACE,yBAAKhB,UAAU,UACb,yBAAK+B,IAAG,kBAAaf,GAAUF,EAAvB,oBAA+CkB,IAAI,OCYlDiB,EAhBO,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KAC9B,OAAID,EAEA,uBAAGE,KAAMF,EAAQN,OAAO,SAASS,IAAI,uBACnC,uBAAGrD,UAAWmD,KAIb,MCiBMG,EAzBM,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACrB,GAAIA,EAAO,CAAC,IAAD,EACUA,EAAMC,OAAO,GAAzBC,EADE,oBAET,OACE,yBAAKzD,UAAU,iBACb,0CACe,IACZuD,GACCA,EAAMrB,KAAI,SAAC9B,GAAD,OACR,0BAAMiB,IAAKjB,EAAGS,IACXT,EAAGR,MACHQ,IAAOqD,GAAY,WAOlC,OAAO,MCfMC,EAJY,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,iBAAsD,IAApCC,mBAAoC,MAAtBD,EAAsB,EACjF,OAAO,yBAAK3D,UAAU,uBAAuB4D,ICchCC,EAdK,SAAC,GAAsB,IAArB/C,EAAoB,EAApBA,KAAMf,EAAc,EAAdA,SAC1B,OACE,yBAAKC,UAAU,gBACb,4BAAKc,GACL,yBAAKd,UAAU,kBAAkBD,KCWxB+D,EAfI,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACbC,GAAO,IAAIC,MAAOC,cAIxB,OAAIH,EACK,yBAAK/D,UAAU,eAAf,SAJY,SAAA+D,GACnB,OAAOC,EAAOD,EAG6BI,CAAaJ,GAAjD,QAEF,MCmCMK,EAtCC,SAAC,GAAiC,IAAhCpB,EAA+B,EAA/BA,QAASW,EAAsB,EAAtBA,iBAEvB7C,EAWEkC,EAXFlC,KACAuD,EAUErB,EAVFqB,OACAC,EASEtB,EATFsB,GACAC,EAQEvB,EARFuB,cACAC,EAOExB,EAPFwB,QACAC,EAMEzB,EANFyB,SACAC,EAKE1B,EALF0B,UACAX,EAIEf,EAJFe,YACAR,EAGEP,EAHFO,MACAK,EAEEZ,EAFFY,YACAe,EACE3B,EADF2B,QAGF,OACE,yBAAK3E,UAAU,WACb,kBAAC,EAAD,CAAac,KAAMA,GACjB,kBAAC,EAAD,CAAeoC,OAAQmB,EAAQlB,KAAK,kBACpC,kBAAC,EAAD,CAAeD,OAAQoB,EAAInB,KAAK,oBAChC,kBAAC,EAAD,CAAeD,OAAQqB,EAAepB,KAAK,0BAC3C,kBAAC,EAAD,CAAeD,OAAQsB,EAASrB,KAAK,0BACrC,kBAAC,EAAD,CAAeD,OAAQuB,EAAUtB,KAAK,oBACtC,kBAAC,EAAD,CAAeD,OAAQwB,EAAWvB,KAAK,iBACvC,kBAAC,EAAD,CAAeD,OAAQyB,EAASxB,KAAK,oBAEvC,kBAAC,EAAD,CAAYY,YAAaA,IACzB,kBAAC,EAAD,CAAcR,MAAOA,IACrB,kBAAC,EAAD,CAAoBK,YAAaA,EAAaD,iBAAkBA,M,uOCpC/D,IAAMiB,EAAwB,SAAxBA,EAAyBnD,EAAMoD,GAC1C,IAAMC,EAAeD,GAAcA,EAAa,KAAOpD,EAAKX,MAASW,EAAKX,KACpEiE,EAAkBtD,EAAK1B,UAAY0B,EAAK1B,SAASmC,KAAI,SAAA9B,GAAE,OAAIwE,EAAsBxE,EAAI0E,MAC3F,O,yVAAO,CAAP,GACKrD,EADL,CAEExB,KAAM6E,EACN/E,SAAUgF,K,gBCiECC,sBAAcC,aAnDb,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,OAAQC,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,gBAAqB,EAC9B5E,mBAAS,MADqB,mBACrEb,EADqE,KACpDY,EADoD,OAE3CC,mBAAS,MAFkC,mBAErEZ,EAFqE,KAE5DyF,EAF4D,KAQ5E,OAJAlD,qBAAU,WACRkD,EAAcX,EAAsBtE,MACnC,IAGD,6BAASO,GAAG,YACV,kBAAC2E,EAAA,EAAD,CAAKN,OAAQA,EAAQzE,mBAAoBA,GACvC,kBAACgF,EAAA,EAAD,CAAUL,MAAOA,EAAOM,MAAM,MAAMC,KAAK,aACzC,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAShG,MAAM,cAAcE,QAASA,EAASD,gBAAiBA,IAChE,kBAACgG,EAAA,EAAD,CACEjG,MAAM,2BACNyF,SAAUA,EACVD,MAAOA,EACPD,aAAcA,EACdG,gBAAiBA,IACnB,kBAACQ,EAAA,EAAD,KACE,kBAAC,EAAD,CAAYhG,QAASA,GACnB,kBAAC,EAAD,CACEQ,gBAAiBR,EACjBD,gBAAiBA,EACjBY,mBAAoBA,KAExB,kBAAC,EAAD,CAASZ,gBAAiBA,GACvBA,EACC,oCACE,kBAAC,EAAD,CAAeY,mBAAoBA,EAAoBZ,gBAAiBA,GACtE,kBAAC,EAAD,CAAQmD,QAASnD,IACjB,kBAAC,EAAD,CAAS8D,iBAAiB,qBAAqBX,QAASnD,KAE1D,kBAAC,EAAD,CAAcA,gBAAiBA,KAGjC,kBAAC,EAAD,CAAgBD,MAAM,+BAAtB","file":"static/js/9.f6a07e34.chunk.js","sourcesContent":["import React from 'react';\nimport {object, string, oneOfType, arrayOf, node} from 'prop-types';\n\nconst BoxPath = ({title, selectedElement, folders, children}) => {\n  return (\n    <div className=\"box-path\">\n      <div>\n        <h5>{title}</h5>\n      </div>\n      <div className=\"box-path-breadcrumb\">\n        <i className=\"fas fa-folder\"></i>\n        <h5>{(selectedElement && selectedElement.path) || (folders && folders.path)}</h5>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nBoxPath.propTypes = {\n  children: oneOfType([arrayOf(node), node]),\n  title: string.isRequired,\n  selectedElement: object,\n  folders: object,\n};\n\nexport default BoxPath;\n","import React from 'react';\nimport {oneOfType, arrayOf, node} from 'prop-types';\n\nconst BoxFolders = ({children}) => {\n  return <div className=\"box-folders\">{children}</div>;\n};\n\nBoxFolders.propTypes = {\n  children: oneOfType([arrayOf(node), node]),\n};\n\nexport default BoxFolders;\n","import React, {useState} from 'react';\nimport {object, func, array} from 'prop-types';\n\nconst SubFolder = ({el, setFolderIcon, folderStructure, selectedItem, setSelection, setSelectedElement}) => {\n  const [isExpanded, setExpand] = useState(false);\n  const {id, name, kind, children, avatar} = el;\n\n  const styles = {\n    height: folderStructure.length === id && kind === 'person' && '30px',\n    top: kind === 'person' && '-15px',\n  };\n\n  const handleFolderClick = e => {\n    const elem = e.currentTarget;\n    setSelectedElement(el);\n\n    if (selectedItem && selectedItem !== elem) selectedItem.lastElementChild.classList.remove('folder-selected');\n    setSelection(elem);\n    setExpand(!isExpanded);\n  };\n\n  return (\n    <div key={id} className=\"folder\">\n      {(folderStructure.length !== id || kind === 'person') && <hr className=\"border-top\" style={styles} />}\n\n      <div onClick={e => handleFolderClick(e)} className=\"folder-kind\">\n        {/* BORDER */}\n        <hr className=\"border-left\" />\n\n        {kind === 'folder' && (\n          <div onClick={() => setExpand(!isExpanded)} className=\"expand\">\n            {setFolderIcon(isExpanded)}\n          </div>\n        )}\n        {kind === 'folder' ? <i className=\"fas fa-folder\"></i> : <img src={`avatars/${avatar || name}.svg`} alt=\"\" />}\n        <p> {name} </p>\n      </div>\n\n      {children !== undefined &&\n        children.length > 0 &&\n        isExpanded &&\n        children.map(el => (\n          <SubFolder\n            key={el.id}\n            folderStructure={children}\n            selectedItem={selectedItem}\n            setSelection={setSelection}\n            setFolderIcon={setFolderIcon}\n            setSelectedElement={setSelectedElement}\n            el={el}></SubFolder>\n        ))}\n    </div>\n  );\n};\n\nSubFolder.propTypes = {\n  el: object.isRequired,\n  setFolderIcon: func.isRequired,\n  folderStructure: array.isRequired,\n  selectedItem: object,\n  setSelection: func.isRequired,\n  setSelectedElement: func.isRequired,\n};\nexport default SubFolder;\n","import React, {useState, useEffect} from 'react';\nimport SubFolder from './SubFolder';\nimport {func, object} from 'prop-types';\n\nconst Folders = ({setSelectedElement, selectedElement, folderStructure}) => {\n  const [selectedItem, setSelection] = useState(null);\n  const setFolderIcon = isVisible => {\n    return isVisible ? '-' : '+';\n  };\n  useEffect(() => {\n    selectedElement && selectedItem && selectedItem.lastElementChild.classList.add('folder-selected');\n    !selectedElement && selectedItem && selectedItem.lastElementChild.classList.remove('folder-selected');\n  }, [selectedItem, selectedElement]);\n  if (folderStructure) {\n    return (\n      <div className=\"folders\">\n        {folderStructure.children.map(el => (\n          <SubFolder\n            key={el.id}\n            folderStructure={folderStructure.children}\n            selectedItem={selectedItem}\n            setSelection={setSelection}\n            setFolderIcon={setFolderIcon}\n            setSelectedElement={setSelectedElement}\n            el={el}></SubFolder>\n        ))}\n      </div>\n    );\n  }\n  return null;\n};\n\nFolders.propTypes = {\n  setSelectedElement: func.isRequired,\n  selectedElement: object,\n  folderStructure: object,\n};\n\nexport default Folders;\n","import React from 'react';\nimport {oneOfType, arrayOf, node} from 'prop-types';\n\nconst BoxInfo = ({children}) => {\n  return <div className=\"box-info\">{children}</div>;\n};\n\nBoxInfo.propTypes = {\n  children: oneOfType([arrayOf(node), node]).isRequired,\n};\n\nexport default BoxInfo;\n","import React from 'react';\nimport {string, oneOfType, arrayOf, node} from 'prop-types';\n\nconst BoxInfoStartup = ({title, children}) => {\n  return (\n    <div className=\"box-info-startup\">\n      <h2>{title}</h2>\n      <p>{children}</p>\n    </div>\n  );\n};\n\nBoxInfoStartup.propTypes = {\n  title: string.isRequired,\n  children: oneOfType([arrayOf(node), node]).isRequired,\n};\n\nexport default BoxInfoStartup;\n","import React from 'react';\nimport {oneOfType, node, arrayOf, object} from 'prop-types';\nimport {useMedia} from '../hooks/useMedia';\n\nconst ProfileDetail = ({children, selectedElement, setSelectedElement}) => {\n  const isTablet = useMedia('(max-width: 896px)');\n\n  const closeModal = (e) => {\n    e.target === e.currentTarget && setSelectedElement(null);\n  };\n\n  if (selectedElement.kind === 'person') {\n    if (isTablet) {\n      return (\n        <div onClick={(e) => closeModal(e)} className=\"profile-box\">\n          <div className=\"profile-modal\">\n            <button className=\"close\" onClick={() => setSelectedElement(null)}>\n              <i className=\"fas fa-times\"></i>\n            </button>\n            {children}\n          </div>\n        </div>\n      );\n    }\n    return <div className=\"profile-box\">{children}</div>;\n  }\n  return null;\n};\n\nProfileDetail.propTypes = {\n  children: oneOfType([arrayOf(node), node]).isRequired,\n  selectedElement: object,\n};\n\nexport default ProfileDetail;\n","import React from 'react';\nimport {object} from 'prop-types';\n\nconst FolderDetail = ({selectedElement}) => {\n  const {name, children = []} = selectedElement;\n  if (selectedElement.kind === 'folder') {\n    return (\n      <div className=\"folder-detail\">\n        <h2>{name}</h2>\n        <p>Ilość plików w folderze: {children.length}</p>\n      </div>\n    );\n  }\n  return null;\n};\n\nFolderDetail.propTypes = {\n  selectedElement: object.isRequired,\n};\n\nexport default FolderDetail;\n","import React from 'react';\nimport {object} from 'prop-types';\n\nconst Avatar = ({profile}) => {\n  const {name, avatar} = profile;\n  return (\n    <div className=\"avatar\">\n      <img src={`avatars/${avatar || name} - Landscape.svg`} alt=\"\" />\n    </div>\n  );\n};\n\nAvatar.propTypes = {\n  profile: object,\n};\n\nexport default Avatar;\n","import React from 'react';\nimport {string} from 'prop-types';\n\nconst ProfileSocial = ({social, icon}) => {\n  if (social) {\n    return (\n      <a href={social} target=\"_blank\" rel=\"noopener noreferrer\">\n        <i className={icon}></i>\n      </a>\n    );\n  }\n  return null;\n};\n\nProfileSocial.propTypes = {\n  social: string,\n  icon: string.isRequired,\n};\n\nexport default ProfileSocial;\n","import React from 'react';\nimport {array} from 'prop-types';\n\nconst ProfileStack = ({stack}) => {\n  if (stack) {\n    const [lastItem] = stack.slice(-1);\n    return (\n      <div className=\"profile-stack\">\n        <p>\n          Technologie:{' '}\n          {stack &&\n            stack.map((el) => (\n              <span key={el.id}>\n                {el.title}\n                {el !== lastItem && ', '}\n              </span>\n            ))}\n        </p>\n      </div>\n    );\n  }\n  return null;\n};\n\nProfileStack.propTypes = {\n  stack: array,\n};\n\nexport default ProfileStack;\n","import React from 'react';\n\nconst ProfileDescription = ({emptyDescription, description = emptyDescription}) => {\n  return <div className=\"profile-description\">{description}</div>;\n};\n\nexport default ProfileDescription;\n","import React from 'react';\nimport {oneOfType, arrayOf, node, string} from 'prop-types';\n\nconst ProfileName = ({name, children}) => {\n  return (\n    <div className=\"profile-name\">\n      <h2>{name}</h2>\n      <div className=\"profile-social\">{children}</div>\n    </div>\n  );\n};\n\nProfileName.propTypes = {\n  children: oneOfType([arrayOf(node), node]).isRequired,\n  name: string.isRequired,\n};\n\nexport default ProfileName;\n","import React from 'react';\nimport {number} from 'prop-types';\n\nconst ProfileAge = ({dateOfBirth}) => {\n  const date = new Date().getFullYear();\n  const calculateAge = dateOfBirth => {\n    return date - dateOfBirth;\n  };\n  if (dateOfBirth) {\n    return <div className=\"profile-age\">Wiek: {calculateAge(dateOfBirth)} lat</div>;\n  }\n  return null;\n};\n\nProfileAge.propTypes = {\n  dateOfBirth: number,\n};\n\nexport default ProfileAge;\n","import React from 'react';\nimport ProfileSocial from './ProfileSocial';\nimport ProfileStack from './ProfileStack';\nimport {object, string} from 'prop-types';\nimport ProfileDescription from './ProfileDescription';\nimport ProfileName from './ProfileName';\nimport ProfileAge from './ProfileAge';\n\nconst Profile = ({profile, emptyDescription}) => {\n  const {\n    name,\n    github,\n    fb,\n    stackOverflow,\n    twitter,\n    linkedIn,\n    portfolio,\n    dateOfBirth,\n    stack,\n    description,\n    spotify,\n  } = profile;\n\n  return (\n    <div className=\"profile\">\n      <ProfileName name={name}>\n        <ProfileSocial social={github} icon=\"fab fa-github\"></ProfileSocial>\n        <ProfileSocial social={fb} icon=\"fab fa-facebook\"></ProfileSocial>\n        <ProfileSocial social={stackOverflow} icon=\"fab fa-stack-overflow\"></ProfileSocial>\n        <ProfileSocial social={twitter} icon=\"fab fa-twitter-square\"></ProfileSocial>\n        <ProfileSocial social={linkedIn} icon=\"fab fa-linkedin\"></ProfileSocial>\n        <ProfileSocial social={portfolio} icon=\"fas fa-globe\"></ProfileSocial>\n        <ProfileSocial social={spotify} icon=\"fab fa-spotify\"></ProfileSocial>\n      </ProfileName>\n      <ProfileAge dateOfBirth={dateOfBirth}></ProfileAge>\n      <ProfileStack stack={stack}></ProfileStack>\n      <ProfileDescription description={description} emptyDescription={emptyDescription}></ProfileDescription>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  profile: object,\n  emptyDescription: string.isRequired,\n};\n\nexport default Profile;\n","export const updateFolderStructure = (elem, parentPath) => {\n  const currentPath = (parentPath && parentPath + '\\\\' + elem.name) || elem.name;\n  const updatedChildren = elem.children && elem.children.map(el => updateFolderStructure(el, currentPath));\n  return {\n    ...elem,\n    path: currentPath,\n    children: updatedChildren,\n  };\n};\n","import React, {useState, useEffect} from 'react';\nimport folderStructure from '../data/folderStructure.json';\nimport Box from './Box/Box';\nimport BoxImage from './Box/BoxImage';\nimport BoxWrapper from './Box/BoxWrapper';\nimport BoxPath from './Box/BoxPath';\nimport MotiveSlider from './MotiveSlider';\nimport BoxContent from './Box/BoxContent';\nimport BoxFolders from './Box/BoxFolders';\nimport Folders from './Folders';\nimport BoxInfo from './Box/BoxInfo';\nimport BoxInfoStartup from './Box/BoxInfoStartup';\nimport ProfileDetail from './Profile/ProfileDetail';\nimport FolderDetail from './FolderDetail';\nimport Avatar from './Avatar';\nimport Profile from './Profile/Profile';\nimport {updateFolderStructure} from './updateFolderStructure';\nimport {withTheme} from './hoc/withTheme';\nimport {withTimeOfDay} from './hoc/withTimeOfDay';\n\nconst AboutUs = ({motive, changeMotive, theme, dateTime, changeTimeOfDay}) => {\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [folders, updateFolders] = useState(null);\n\n  useEffect(() => {\n    updateFolders(updateFolderStructure(folderStructure));\n  }, []);\n\n  return (\n    <section id=\"about-us\">\n      <Box motive={motive} setSelectedElement={setSelectedElement}>\n        <BoxImage theme={theme} light=\"box\" dark=\"box_dark\"></BoxImage>\n        <BoxWrapper>\n          <BoxPath title=\"Lokalizacja\" folders={folders} selectedElement={selectedElement}></BoxPath>\n          <MotiveSlider\n            title=\"Przełącz motyw\"\n            dateTime={dateTime}\n            theme={theme}\n            changeMotive={changeMotive}\n            changeTimeOfDay={changeTimeOfDay}></MotiveSlider>\n          <BoxContent>\n            <BoxFolders folders={folders}>\n              <Folders\n                folderStructure={folders}\n                selectedElement={selectedElement}\n                setSelectedElement={setSelectedElement}></Folders>\n            </BoxFolders>\n            <BoxInfo selectedElement={selectedElement}>\n              {selectedElement ? (\n                <>\n                  <ProfileDetail setSelectedElement={setSelectedElement} selectedElement={selectedElement}>\n                    <Avatar profile={selectedElement}></Avatar>\n                    <Profile emptyDescription=\"Brak opisu profilu\" profile={selectedElement}></Profile>\n                  </ProfileDetail>\n                  <FolderDetail selectedElement={selectedElement}></FolderDetail>\n                </>\n              ) : (\n                <BoxInfoStartup title=\"Witamy w widoku folderów\">\n                  Lorem ipsum, dolor sit amet consectetur adipisicing elit. Perferendis officiis vitae praesentium\n                  ducimus iste incidunt voluptates cum autem quis, totam beatae. Animi fuga expedita atque labore\n                  reiciendis magni harum obcaecati.\n                </BoxInfoStartup>\n              )}\n            </BoxInfo>\n          </BoxContent>\n        </BoxWrapper>\n      </Box>\n    </section>\n  );\n};\n\nexport default withTimeOfDay(withTheme(AboutUs));\n"],"sourceRoot":""}